name: Security Scan

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    # 매일 오전 6시 (UTC) 정기 보안 스캔
    - cron: '0 6 * * *'

jobs:
  snyk-security:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        
    - name: Install Snyk CLI
      run: npm install -g snyk
      
    - name: Authenticate Snyk
      run: snyk auth ${{ secrets.SNYK_TOKEN }}
      if: env.SNYK_TOKEN != ''
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      
    - name: Run Snyk to check for vulnerabilities
      run: snyk test --severity-threshold=high
      if: env.SNYK_TOKEN != ''
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        
    - name: Run Snyk to check for license issues
      run: snyk test --severity-threshold=medium --scan=license
      if: env.SNYK_TOKEN != ''
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        
    - name: Upload Snyk results to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v3
      if: always() && env.SNYK_TOKEN != ''
      with:
        sarif_file: snyk.sarif
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  trivy-security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner in repo mode
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  secret-scanning:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run TruffleHog OSS
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

  license-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10.11.1
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Install license checker
      run: pnpm add -g license-checker
      
    - name: Check licenses
      run: |
        echo "🔍 Checking licenses..."
        license-checker --onlyAllow "MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC;0BSD" --excludePrivatePackages --json > license-report.json
        
    - name: Generate license summary
      run: |
        echo "📋 License Summary:" > license-summary.md
        echo "" >> license-summary.md
        node -e "
        const fs = require('fs');
        const licenses = JSON.parse(fs.readFileSync('license-report.json', 'utf8'));
        const summary = {};
        
        Object.values(licenses).forEach(pkg => {
          const license = pkg.licenses || 'Unknown';
          summary[license] = (summary[license] || 0) + 1;
        });
        
        console.log('| License | Count |');
        console.log('|---------|-------|');
        Object.entries(summary).forEach(([license, count]) => {
          console.log(\`| \${license} | \${count} |\`);
        });
        " >> license-summary.md
        
    - name: Upload license report
      uses: actions/upload-artifact@v4
      with:
        name: license-report
        path: |
          license-report.json
          license-summary.md
        retention-days: 30
        
    - name: Comment license summary on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          if (fs.existsSync('license-summary.md')) {
            const summary = fs.readFileSync('license-summary.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 📜 License Summary\n\n${summary}`
            });
          }

  security-summary:
    runs-on: ubuntu-latest
    needs: [snyk-security, trivy-security, secret-scanning, license-check]
    if: always()
    
    steps:
    - name: Security Scan Summary
      run: |
        echo "## 🛡️ Security Scan Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Scan Type | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Snyk Security | ${{ needs.snyk-security.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Trivy Security | ${{ needs.trivy-security.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Secret Scanning | ${{ needs.secret-scanning.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| License Check | ${{ needs.license-check.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🔍 Check the [Security tab](https://github.com/${{ github.repository }}/security) for detailed results." >> $GITHUB_STEP_SUMMARY
